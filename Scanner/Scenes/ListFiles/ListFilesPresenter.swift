//
//  ListFilesPresenter.swift
//  Scanner
//
//  Created by Zaizen Kaegyoshi on 4/8/19.
//  Copyright (c) 2019 zzzz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import ChameleonFramework

protocol ListFilesPresentationLogic
{
    func presentTags(response: ListFiles.FetchTags.Response)
    func presentFiles(response: [File])
}

class ListFilesPresenter: ListFilesPresentationLogic
{
    weak var viewController: ListFilesDisplayLogic?
    
    // MARK: Do something
    func presentTags(response: ListFiles.FetchTags.Response) {
        let models = response.tags.map { (t) -> ListFiles.TagModel in
            
            
            return ListFiles.TagModel.init(name: t.name, color: UIColor.randomFlat(), count: "3")
        }
        
        print(TagManager.sharedInstance.filesForTag(tag: response.folders.first!))
        let folders = response.folders.map { (t) -> ListFiles.FolderModel in
            let files = TagManager.sharedInstance.filesForTag(tag: t)
            let images: [UIImage] = files.map({ (file) -> UIImage in
                return file.cacheImage!
            })
//            let colors: [UIColor] = [UIColor.flatRed(), UIColor.flatBlue(), UIColor.flatGray(), UIColor.flatMint(), UIColor.flatTeal() ]
//            var img = #imageLiteral(resourceName: "files")
//            var img2 = #imageLiteral(resourceName: "forms")
            return ListFiles.FolderModel.init(name: t.name, images: images)
        }
        let vm = ListFiles.FetchTags.ViewModel.init(tags: models, folders: folders)
        self.viewController?.displayTags(vm: vm)
    }
    func presentFiles(response: [File]) {
        
//        let fileModels = response.files.map { (f) -> ListFiles.FileModel in
//            ListFiles.FileModel.init(name: f.name, date: DatePresenter.fullDateString(date: f.date), image: f.cacheImage!)
//        }
        
        self.viewController?.displayFiles(vm: response)
    }
    
}
