//
//  ListTagsRouter.swift
//  Scanner
//
//  Created by Zaizen Kaegyoshi on 4/17/19.
//  Copyright (c) 2019 zzzz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListTagsRoutingLogic
{
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    func dismiss()
    func routeToAddTag()
}

protocol ListTagsDataPassing
{
    var dataStore: ListTagsDataStore? { get }
}

class ListTagsRouter: NSObject, ListTagsRoutingLogic, ListTagsDataPassing
{
    weak var viewController: ListTagsViewController?
    var dataStore: ListTagsDataStore?
    
    // MARK: Routing
    
    func dismiss() {
        let destinationVC = self.viewController?.presentingViewController
        if let vc = (destinationVC as? ShowFileViewController) {
            var destinationDS = vc.router!.dataStore!
            passDataToShowFile(source: dataStore!, destination: &destinationDS)
            vc.fetchFile()
            navigateBack(source: self.viewController!)
        } else {
            
            navigateBack(source: self.viewController!)
        }
        

    }
    func passDataToShowFile(source: ListTagsDataStore, destination: inout ShowFileDataStore) {
        destination.file = source.file
    }
    func navigateBack(source: ListTagsViewController ) {
        source.dismiss(animated: true, completion: nil)
    }
    
    func routeToAddTag() {
        let storyboard = UIStoryboard(name: "Main", bundle: nil)
        let destinationVC = storyboard.instantiateViewController(withIdentifier: "AddTag") as! AddTagViewController
        
        
        
//        var destinationDS = destinationVC.router!.dataStore!
        
        navigateToAddTag(source: viewController!, destination: destinationVC)
    }
    
    func navigateToAddTag(source: ListTagsViewController, destination: AddTagViewController)
    {
        //        source.present
        //        source.show(destination, sender: nil)
        destination.modalPresentationStyle = .overCurrentContext
        destination.modalTransitionStyle = .crossDissolve
        //        self.viewController!.present(destination, animated: true, completion: nil)
        source.present(destination, animated: true, completion: nil)
    }
    //func routeToSomewhere(segue: UIStoryboardSegue?)
    //{
    //  if let segue = segue {
    //  } else {
    //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
    //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
    //    var destinationDS = destinationVC.router!.dataStore!
    //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
    //    navigateToSomewhere(source: viewController!, destination: destinationVC)
    //  }
    //}
    
    // MARK: Navigation
    
    //func navigateToSomewhere(source: ListTagsViewController, destination: SomewhereViewController)
    //{
    //  source.show(destination, sender: nil)
    //}
    
    // MARK: Passing data
    
    //func passDataToSomewhere(source: ListTagsDataStore, destination: inout SomewhereDataStore)
    //{
    //  destination.name = source.name
    //}
}
